avgMass
avgMass<-tapply(beren3$value[Mass],beren3$age[Mass],mean)
avgMass
varMass<-tapply(beren3$value[Mass],beren3$age[Mass],var)
totalMass<-tapply(beren3$value[Mass],beren3$age[Mass],sum)
numMass<-tapply(beren3$value[Mass],beren3$age[Mass],length)
cor(beren3$value[Mass],beren3$age[Mass])
cor.test(beren3$value[Mass],beren3$age[Mass])
berenCor<-cor.test(beren3$value[Mass],beren3$age[Mass])
summary(berenCor)
berenANOVA<-aov(beren3$value[Mass]~beren3$age[Mass])
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$value[Mass]/1000~cyrus3$age[Mass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=4, bg="orange")
head(data2)
head(cyrus3)
cyrus3[1:23,1:23]
cyrus3[1:23,1:10]
cyrus3[1:23,1:12]
head(Data1)
Mass<-which(Data1[,9]=='trait_mass')
berenMass<-Data1[Mass,]
head(berenMass)
Mass<-which(Data1[,'event']=='trait_mass')
head(berenMass)
Data1[1:3]
dayID<-apply(Data1,1,function(x)paste(x[1:3],collapse='-'))
dateID<-sapply(dayID,as.Date,format="%Y-%m-%d",origin="2019-04-18")
head(Data1)
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
head(Data1)
head(berenMass)
beren2<-Data1
beren3<-beren2[order(beren2$age),]
Mass<-which(beren3$event=="trait_mass")
avgMass<-mean(beren3$value[Mass])
avgMass
avgMass<-tapply(beren3$value[Mass],beren3$age[Mass],mean)
avgMass
varMass<-tapply(beren3$value[Mass],beren3$age[Mass],var)
totalMass<-tapply(beren3$value[Mass],beren3$age[Mass],sum)
numMass<-tapply(beren3$value[Mass],beren3$age[Mass],length)
cor(beren3$value[Mass],beren3$age[Mass])
cor.test(beren3$value[Mass],beren3$age[Mass])
berenCor<-cor.test(beren3$value[Mass],beren3$age[Mass])
summary(berenCor)
berenANOVA<-aov(beren3$value[Mass]~beren3$age[Mass])
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$value[Mass]/1000~cyrus3$age[Mass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=4, bg="orange")
Mass<-which(Data2[,9]=='trait_mass')
head(Data2)
head(cyrusMass)
head(Data2)
cyrus2<-Data2
cyrus3<-cyrus2[order(cyrus2$age),]
write.csv(cyrus3,'cyrus_new.csv',quote=F,row.names=FALSE)
Mass<-which(cyrus3$event=="trait_mass")
avgMass<-mean(cyrus3$value[Mass])
avgMass<-tapply(cyrus3$value[Mass],cyrus3$age[Mass],mean)
varMass<-tapply(cyrus3$value[Mass],cyrus3$age[Mass],var)
totalMass<-tapply(cyrus3$value[Mass],cyrus3$age[Mass],sum)
numMass<-tapply(cyrus3$value[Mass],cyrus3$age[Mass],length)
cor(cyrus3$value[Mass],cyrus3$age[Mass])
cor.test(cyrus3$value[Mass],cyrus3$age[Mass])
cyrusCor<-cor.test(cyrus3$value[Mass],cyrus3$age[Mass])
summary(cyrusCor)
cyrusANOVA<-aov(cyrus3$value[Mass]~cyrus3$age[Mass])
boxplot(cyrus3$value[Mass]~cyrus3$age[Mass],xlab="Age (days)",ylab="mass(g)")
plot(as.numeric(names(totalMass)),totalMass,type="b",pch=16,xlab="age in days",ylab="mass in grams")
head(cyrus3)
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
title("Cyrus Age vs Mass",xlab="age in days",ylab="mass in grams")
abline(h=mean(totalMass),lty=2,col='blue')
plot(as.numeric(names(totalMass)),totalMass,type="b",pch=16,xlab="age in days",ylab="mass (g)")
abline(h=mean(totalMass),lty=2,col='blue')
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$value[Mass]/1000~cyrus3$age[Mass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=4, bg="orange")
points(cyrus3$value[Mass]/1000~cyrus3$age[Mass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
head(Data1)
Mass<-which(Data1[,9]=='trait_mass')
berenMass<-Data1[Mass,]
head(berenMass)
Mass<-which(Data1[,'event']=='trait_mass')
head(berenMass)
Data1[1:3]
dayID<-apply(Data1,1,function(x)paste(x[1:3],collapse='-'))
dateID<-sapply(dayID,as.Date,format="%Y-%m-%d",origin="2019-04-18")
head(Data1)
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
head(Data1)
head(berenMass)
beren2<-Data1
beren3<-beren2[order(beren2$age),]
Mass<-which(beren3$event=="trait_mass")
avgMass<-mean(beren3$value[Mass])
avgMass
avgMass<-tapply(beren3$value[Mass],beren3$age[Mass],mean)
avgMass
varMass<-tapply(beren3$value[Mass],beren3$age[Mass],var)
totalMass<-tapply(beren3$value[Mass],beren3$age[Mass],sum)
numMass<-tapply(beren3$value[Mass],beren3$age[Mass],length)
cor(beren3$value[Mass],beren3$age[Mass])
cor.test(beren3$value[Mass],beren3$age[Mass])
berenCor<-cor.test(beren3$value[Mass],beren3$age[Mass])
summary(berenCor)
berenANOVA<-aov(beren3$value[Mass]~beren3$age[Mass])
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$value[Mass]/1000~cyrus3$age[Mass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=4, bg="orange")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=4, bg="orange")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=2, bg="orange")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("dot", "triangle"), lty=1:1, cex=0.8,
title="Kids", text.font=2, bg="orange")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=2, bg="orange")
points(cyrus3$value[Mass]/1000~cyrus3$age[Mass],type="b",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
head(cyrus3)
cyrus3(1:23,9:10)
cyrus3(1:23,9)
data2(1:23,9)
head(cyrus3)
data2(1:23,9)
cyrus3(1:23,9)
cyrus3[1:23,9]
cyrus[1:23,]
cyrus3[1:23]
cyrus3[1:23,]
head(Data1)
Mass<-which(Data1[,9]=='trait_mass')
berenMass<-Data1[Mass,]
head(berenMass)
Mass<-which(Data1[,'event']=='trait_mass')
head(berenMass)
Data1[1:3]
dayID<-apply(Data1,1,function(x)paste(x[1:3],collapse='-'))
dateID<-sapply(dayID,as.Date,format="%Y-%m-%d",origin="2019-04-18")
head(Data1)
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
head(Data1)
head(berenMass)
beren2<-Data1
beren3<-beren2[order(beren2$age),]
Mass<-which(beren3$event=="trait_mass")
avgMass<-mean(beren3$value[Mass])
avgMass
avgMass<-tapply(beren3$value[Mass],beren3$age[Mass],mean)
avgMass
varMass<-tapply(beren3$value[Mass],beren3$age[Mass],var)
totalMass<-tapply(beren3$value[Mass],beren3$age[Mass],sum)
numMass<-tapply(beren3$value[Mass],beren3$age[Mass],length)
cor(beren3$value[Mass],beren3$age[Mass])
cor.test(beren3$value[Mass],beren3$age[Mass])
berenCor<-cor.test(beren3$value[Mass],beren3$age[Mass])
summary(berenCor)
berenANOVA<-aov(beren3$value[Mass]~beren3$age[Mass])
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",ylim=c(0,20),col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$value[Mass2]/1000~cyrus3$age[Mass2],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=4, bg="orange")
points(cyrus3$age[Mass2]~cyrus3$value[Mass2]/1000,type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",ylim=c(0,20),col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$age[Mass2]~cyrus3$value[Mass2]/1000,type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$age[Mass2]~cyrus3$value[Mass2]/1000,type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
head(Data1)
Mass<-which(Data1[,9]=='trait_mass')
berenMass<-Data1[Mass,]
head(berenMass)
Mass<-which(Data1[,'event']=='trait_mass')
head(berenMass)
Data1[1:3]
dayID<-apply(Data1,1,function(x)paste(x[1:3],collapse='-'))
dateID<-sapply(dayID,as.Date,format="%Y-%m-%d",origin="2019-04-18")
head(Data1)
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
head(Data1)
head(berenMass)
beren2<-Data1
beren3<-beren2[order(beren2$age),]
Mass<-which(beren3$event=="trait_mass")
avgMass<-mean(beren3$value[Mass])
avgMass
avgMass<-tapply(beren3$value[Mass],beren3$age[Mass],mean)
avgMass
varMass<-tapply(beren3$value[Mass],beren3$age[Mass],var)
totalMass<-tapply(beren3$value[Mass],beren3$age[Mass],sum)
numMass<-tapply(beren3$value[Mass],beren3$age[Mass],length)
cor(beren3$value[Mass],beren3$age[Mass])
cor.test(beren3$value[Mass],beren3$age[Mass])
berenCor<-cor.test(beren3$value[Mass],beren3$age[Mass])
summary(berenCor)
berenANOVA<-aov(beren3$value[Mass]~beren3$age[Mass])
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$value[Mass]/1000~cyrus3$age[Mass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=4, bg="orange")
plot(as.numeric(names(totalMass)),totalMass,type="p",ylim=c(0,20),col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
head(Data1)
Mass<-which(Data1[,9]=='trait_mass')
berenMass<-Data1[Mass,]
head(berenMass)
Mass<-which(Data1[,'event']=='trait_mass')
head(berenMass)
Data1[1:3]
dayID<-apply(Data1,1,function(x)paste(x[1:3],collapse='-'))
dateID<-sapply(dayID,as.Date,format="%Y-%m-%d",origin="2019-04-18")
head(Data1)
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
head(Data1)
head(berenMass)
beren2<-Data1
beren3<-beren2[order(beren2$age),]
Mass<-which(beren3$event=="trait_mass")
avgMass<-mean(beren3$value[Mass])
avgMass
avgMass<-tapply(beren3$value[Mass],beren3$age[Mass],mean)
avgMass
varMass<-tapply(beren3$value[Mass],beren3$age[Mass],var)
totalMass<-tapply(beren3$value[Mass],beren3$age[Mass],sum)
numMass<-tapply(beren3$value[Mass],beren3$age[Mass],length)
cor(beren3$value[Mass],beren3$age[Mass])
cor.test(beren3$value[Mass],beren3$age[Mass])
berenCor<-cor.test(beren3$value[Mass],beren3$age[Mass])
summary(berenCor)
berenANOVA<-aov(beren3$value[Mass]~beren3$age[Mass])
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",ylim=c(0,20),col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$value[Mass]/1000~cyrus3$age[Mass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
Mass2<-which(Data2[,9]=='trait_mass')
cyrusMas2s<-Data2[Mass,]
cyrusMass2<-Data2[Mass,]
head(cyrusMass)
Mass2<-which(Data2[,'event']=="trait_mass")
points(cyrus3$value[Mass2]/1000~cyrus3$age[Mass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
head(Data1)
Mass<-which(Data1[,9]=='trait_mass')
berenMass<-Data1[Mass,]
head(berenMass)
Mass<-which(Data1[,'event']=='trait_mass')
head(berenMass)
Data1[1:3]
dayID<-apply(Data1,1,function(x)paste(x[1:3],collapse='-'))
dateID<-sapply(dayID,as.Date,format="%Y-%m-%d",origin="2019-04-18")
head(Data1)
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
head(Data1)
head(berenMass)
beren2<-Data1
beren3<-beren2[order(beren2$age),]
Mass<-which(beren3$event=="trait_mass")
avgMass<-mean(beren3$value[Mass])
avgMass
avgMass<-tapply(beren3$value[Mass],beren3$age[Mass],mean)
avgMass
varMass<-tapply(beren3$value[Mass],beren3$age[Mass],var)
totalMass<-tapply(beren3$value[Mass],beren3$age[Mass],sum)
numMass<-tapply(beren3$value[Mass],beren3$age[Mass],length)
cor(beren3$value[Mass],beren3$age[Mass])
cor.test(beren3$value[Mass],beren3$age[Mass])
berenCor<-cor.test(beren3$value[Mass],beren3$age[Mass])
summary(berenCor)
berenANOVA<-aov(beren3$value[Mass]~beren3$age[Mass])
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",ylim=c(0,20),col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
Mass2<-which(Data2[,9]=='trait_mass')
cyrusMass<-Data2[Mass2,]
head(cyrusMass2)
Mass2<-which(Data2[,'event']=="trait_mass")
dayID<-apply(Data2,1,function(x)paste(x[1:3],collapse='-'))
dateID<-sapply(dayID,as.Date,format="%Y-%m-%d",origin="2022-04-12")
head(Data2)
Data2$age<-dateID-dateID[which(Data2$event=='birth')]
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",ylim=c(0,20),col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$value[Mass2]/1000~cyrus3$age[Mass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
berenANOVA<-aov(beren3$value[Mass]~beren3$age[Mass])
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",ylim=c(0,20),col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$value[Mass2]/1000~cyrus3$age[Mass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
points(cyrus3$value[Mass2]/1000~cyrus3$age[Mass2],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=4, bg="orange")
head(Mass2)
head(Mass2)
head(cyrus3)
View(Data2)
Mass2<-which(Data2[,'event']=="trait_mass")
points(cyrus3$value[Mass2]/1000~cyrus3$age[Mass2],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
cMass<-which(cyrus3$event=="trait_mass")
avgcMass<-tapply(cyrus3$value[Mass],cyrus3$age[Mass],mean)
varcMass<-tapply(cyrus3$value[Mass],cyrus3$age[Mass],var)
cMass<-which(cyrus3$event=="trait_mass")
avgcMass<-mean(cyrus3$value[cMass])
avgcMass<-tapply(cyrus3$value[cMass],cyrus3$age[cMass],mean)
varcMass<-tapply(cyrus3$value[cMass],cyrus3$age[cMass],var)
totalcMass<-tapply(cyrus3$value[cMass],cyrus3$age[cMass],sum)
numcMass<-tapply(cyrus3$value[cMass],cyrus3$age[cMass],length)
cor(cyrus3$value[cMass],cyrus3$age[cMass])
cor.test(cyrus3$value[cMass],cyrus3$age[cMass])
cyrusCor<-cor.test(cyrus3$value[cMass],cyrus3$age[cMass])
head(Data1)
Mass<-which(Data1[,9]=='trait_mass')
berenMass<-Data1[Mass,]
head(berenMass)
Mass<-which(Data1[,'event']=='trait_mass')
head(berenMass)
Data1[1:3]
dayID<-apply(Data1,1,function(x)paste(x[1:3],collapse='-'))
dateID<-sapply(dayID,as.Date,format="%Y-%m-%d",origin="2019-04-18")
head(Data1)
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
head(Data1)
head(berenMass)
beren2<-Data1
beren3<-beren2[order(beren2$age),]
Mass<-which(beren3$event=="trait_mass")
avgMass<-mean(beren3$value[Mass])
avgMass
avgMass<-tapply(beren3$value[Mass],beren3$age[Mass],mean)
avgMass
varMass<-tapply(beren3$value[Mass],beren3$age[Mass],var)
totalMass<-tapply(beren3$value[Mass],beren3$age[Mass],sum)
numMass<-tapply(beren3$value[Mass],beren3$age[Mass],length)
cor(beren3$value[Mass],beren3$age[Mass])
cor.test(beren3$value[Mass],beren3$age[Mass])
berenCor<-cor.test(beren3$value[Mass],beren3$age[Mass])
summary(berenCor)
berenANOVA<-aov(beren3$value[Mass]~beren3$age[Mass])
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",ylim=c(0,20),col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$value[cMass]/1000~cyrus3$age[cMass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
legend(1200, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=4, bg="orange")
cMass<-which(cyrus3$event=="trait_mass")
avgcMass<-mean(cyrus3$value[cMass])
avgcMass<-tapply(cyrus3$value[cMass],cyrus3$age[cMass],mean)
varcMass<-tapply(cyrus3$value[cMass],cyrus3$age[cMass],var)
totalcMass<-tapply(cyrus3$value[cMass],cyrus3$age[cMass],sum)
numcMass<-tapply(cyrus3$value[cMass],cyrus3$age[cMass],length)
cor(cyrus3$value[cMass],cyrus3$age[cMass])
cor.test(cyrus3$value[cMass],cyrus3$age[cMass])
cyrusCor<-cor.test(cyrus3$value[cMass],cyrus3$age[cMass])
head(Data1)
Mass<-which(Data1[,9]=='trait_mass')
berenMass<-Data1[Mass,]
head(berenMass)
Mass<-which(Data1[,'event']=='trait_mass')
head(berenMass)
Data1[1:3]
dayID<-apply(Data1,1,function(x)paste(x[1:3],collapse='-'))
dateID<-sapply(dayID,as.Date,format="%Y-%m-%d",origin="2019-04-18")
head(Data1)
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
head(Data1)
head(berenMass)
beren2<-Data1
beren3<-beren2[order(beren2$age),]
Mass<-which(beren3$event=="trait_mass")
avgMass<-mean(beren3$value[Mass])
avgMass
avgMass<-tapply(beren3$value[Mass],beren3$age[Mass],mean)
avgMass
varMass<-tapply(beren3$value[Mass],beren3$age[Mass],var)
totalMass<-tapply(beren3$value[Mass],beren3$age[Mass],sum)
numMass<-tapply(beren3$value[Mass],beren3$age[Mass],length)
cor(beren3$value[Mass],beren3$age[Mass])
cor.test(beren3$value[Mass],beren3$age[Mass])
berenCor<-cor.test(beren3$value[Mass],beren3$age[Mass])
summary(berenCor)
berenANOVA<-aov(beren3$value[Mass]~beren3$age[Mass])
boxplot(beren3$value[Mass]~beren3$age[Mass],xlab="Age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",ylim=c(0,20),col="red",pch=16,xlab="Age in Days",ylab="Mass in Kg")
points(cyrus3$value[cMass]/1000~cyrus3$age[cMass],type="p",pch=17,col="blue",xlab="Age in Days",ylab="mass in Kg")
title("Beren and Cyrus Age vs Mass",xlab="Age in Days",ylab="Mass in Kg")
legend(1100, 5.5, legend=c("Beren", "Cyrus"),
col=c("red", "blue"), lty=1:1, cex=0.8,
title="Kids", text.font=4, bg="orange")
ggplot(data=fst.df,aes(x=Site1,y=Site2,fill=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster<-read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide<-reshape(lobster,idvar=c("ID","Site"),timevar="Locus",direction="wide",sep="")
colnames(lobster_wide)<-gsub("Genotype","",colnames(lobster_wide))
snpgeno<-lobster_wide[,3:ncol(lobster_wide)]
snps_to_remove<-c("25580","32362","41521","53889","65376","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
snpgeno<-snpgeno[,!colnames(snpgeno)%in%snps_to_remove]
ind<-as.character(lobster_wide$ID)
site<-as.character(lobster_wide$Site)
lobster_gen<-df2genind(snpgeno,ploidy=2,ind.names=ind,pop=site,sep="")
lobster_gen<-missingno(lobster_gen,type="geno",cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for(i in dups_lobster){
if (length(dups_lobster[i])>1){
x<-x+1
}
}
lob_Nodups<-indNames(lobster_gen)[!indNames(lobster_gen) %in%lob_dups]
lobster_gen<-lobster_gen[lob_Nodups,]
summary(lobster_gen$pop)
basic_lobster<-basic.stats(lobster_gen,diploid=TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
He_lobster<-round(apply(basic_lobster$Hs,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
par(mar=c(4,4,1,1),las=1,mgp=c(2,0.25,0),tck=-0.005,cex.lab=1.25)
plot(He_lobster,Ho_lobster,xlab="expected H",ylab="observed H",pch=21,bg="gray",xlim=c(0.32,0.405),ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster),lty=2,lwd=1.25,col='red')
Fis<-apply(basic_lobster$Fis,MARGIN=2,FUN=mean,na.rm=TRUE)
lobster_gen_sub<-popsub(lobster_gen,sublist=c("Ale","Ber","Brd","Pad","Sar17","Vig"))
lobster_fst<-genet.dist(lobster_gen_sub,method="WC84")%>%round(digits=3)
lab_order<-c("Ber","Brd","Pad","Vig","Sar17","Ale")
fst.mat<-as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2<-fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2),arr.ind=TRUE)
fst.df<-data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]],
Site2=dimnames(fst.mat2)[[1]][ind[,1]],
Fst=fst.mat2[ind])
fst.df$Site1<-factor(fst.df$Site1,levels=unique(fst.df$Site1))
fst.df$Site2<-factor(fst.df$Site2,levels=unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst<0]<-0
fst.label<-expression(italic("F")[ST])
mid<-max(fst.df$Fst)/2
ggplot(data=fst.df,aes(x=Site1,y=Site2,fill=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
